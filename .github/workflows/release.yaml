name: Release
run-name: Manual release

on:
  workflow_dispatch:


permissions:
  contents: write

jobs:
  ci:
    uses: ./.github/workflows/ci.yaml
    secrets: inherit

  release:
    needs: ci
    name: Release to Maven Central and tag
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=512m"
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Java 24
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 24

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          build-scan-publish: true
          build-scan-terms-of-use-url: 'https://gradle.com/terms-of-service'
          build-scan-terms-of-use-agree: 'yes'


      - name: Get version
        id: get-version
        run: echo "version=$(cat version.txt)" >> "$GITHUB_OUTPUT"

      - name: Ensure version is not a SNAPSHOT
        run: |
          if [[ "${{ steps.get-version.outputs.version }}" == *-SNAPSHOT ]]; then
            echo "Version ${{ steps.get-version.outputs.version }} is a SNAPSHOT. Refusing to release." >&2
            exit 1
          fi

      - name: Build
        run: |
          ./gradlew assemble

      - name: Generate dokka docs
        run: |
          ./gradlew dokkaGenerate

      - name: Upload docs
        uses: actions/upload-pages-artifact@v4
        with:
          path: build/dokka/html

      - name: Publish to Maven Central
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALUSERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.ORG_GRADLE_PROJECT_MAVENCENTRALPASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEYID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGINMEMORYKEYPASSWORD }}
        run: ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get-version.outputs.version }}
          name: ${{ steps.get-version.outputs.version }}
          generate_release_notes: true

  deployDocs:
    name: Deploy docs
    runs-on: ubuntu-latest
    needs: release


    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    steps:
      - name: Deploy docs
        uses: actions/deploy-pages@v4