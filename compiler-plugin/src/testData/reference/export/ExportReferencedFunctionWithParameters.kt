package reference.export

@ExportReferences
private object References : BaseReferenceExporter() {
    init {
        <!EXPORTED_MARKER_IndexedParameter(owner=TopLevelMember(packageName=[kotlin, collections], name=associate), name=transform, index=1, indexInList=0, type=VALUE), EXPORTED_MARKER_ReceiverParameter(owner=TopLevelMember(packageName=[kotlin, collections], name=associate), name=<receiver>, index=0, type=EXTENSION), EXPORTED_MARKER_TopLevelMember(packageName=[kotlin, collections], name=associate), EXPORTED_MARKER_TypeParameter(owner=TopLevelMember(packageName=[kotlin, collections], name=associate), name=K, index=1), EXPORTED_MARKER_TypeParameter(owner=TopLevelMember(packageName=[kotlin, collections], name=associate), name=T, index=0), EXPORTED_MARKER_TypeParameter(owner=TopLevelMember(packageName=[kotlin, collections], name=associate), name=V, index=2), SYMBOL_EXPORT_REFERENCE_EXPORTING!>exportReferenced(mapOf<Int, Int>().entries.<!CANNOT_INFER_PARAMETER_TYPE, CANNOT_INFER_PARAMETER_TYPE, NEW_INFERENCE_NO_INFORMATION_FOR_PARAMETER, NEW_INFERENCE_NO_INFORMATION_FOR_PARAMETER!>associate<!> { <!CANNOT_INFER_PARAMETER_TYPE, NEW_INFERENCE_NO_INFORMATION_FOR_PARAMETER!>placeholder<!>() }, includeParameters = true, includeTypeParameters = true)<!>
        <!EXPORTED_MARKER_IndexedParameter(owner=TopLevelMember(packageName=[kotlin, collections], name=map), name=transform, index=1, indexInList=0, type=VALUE), EXPORTED_MARKER_ReceiverParameter(owner=TopLevelMember(packageName=[kotlin, collections], name=map), name=<receiver>, index=0, type=EXTENSION), EXPORTED_MARKER_TopLevelMember(packageName=[kotlin, collections], name=map), EXPORTED_MARKER_TypeParameter(owner=TopLevelMember(packageName=[kotlin, collections], name=map), name=R, index=1), EXPORTED_MARKER_TypeParameter(owner=TopLevelMember(packageName=[kotlin, collections], name=map), name=T, index=0), SYMBOL_EXPORT_REFERENCE_EXPORTING!>exportReferenced(listOf<Int>().<!CANNOT_INFER_PARAMETER_TYPE, NEW_INFERENCE_NO_INFORMATION_FOR_PARAMETER!>map<!> { <!CANNOT_INFER_PARAMETER_TYPE, NEW_INFERENCE_NO_INFORMATION_FOR_PARAMETER!>placeholder<!>() }, true, true)<!>
    }
}