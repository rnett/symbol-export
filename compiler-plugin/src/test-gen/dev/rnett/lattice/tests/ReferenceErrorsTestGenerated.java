

package dev.rnett.lattice.tests;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link dev.rnett.lattice.GenerateTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("src/testData/reference/errors")
@TestDataPath("$PROJECT_ROOT")
public class ReferenceErrorsTestGenerated extends BaseDiagnosticCompilerTest {
  @Test
  public void testAllFilesPresentInErrors() {
    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("src/testData/reference/errors"), Pattern.compile("^(.+)\\.kt$"), null, true);
  }

  @Test
  @TestMetadata("MeaninglessStatement.kt")
  public void testMeaninglessStatement() {
    runTest("src/testData/reference/errors/MeaninglessStatement.kt");
  }

  @Test
  @TestMetadata("MoreReferenceErrors.kt")
  public void testMoreReferenceErrors() {
    runTest("src/testData/reference/errors/MoreReferenceErrors.kt");
  }

  @Test
  @TestMetadata("MustBeAnnotated.kt")
  public void testMustBeAnnotated() {
    runTest("src/testData/reference/errors/MustBeAnnotated.kt");
  }

  @Test
  @TestMetadata("MustBeObject.kt")
  public void testMustBeObject() {
    runTest("src/testData/reference/errors/MustBeObject.kt");
  }

  @Test
  @TestMetadata("MustExtendBase.kt")
  public void testMustExtendBase() {
    runTest("src/testData/reference/errors/MustExtendBase.kt");
  }

  @Test
  @TestMetadata("NotAccessLiteral.kt")
  public void testNotAccessLiteral() {
    runTest("src/testData/reference/errors/NotAccessLiteral.kt");
  }

  @Test
  @TestMetadata("NotBooleanLiteral.kt")
  public void testNotBooleanLiteral() {
    runTest("src/testData/reference/errors/NotBooleanLiteral.kt");
  }

  @Test
  @TestMetadata("NotClassLiteral.kt")
  public void testNotClassLiteral() {
    runTest("src/testData/reference/errors/NotClassLiteral.kt");
  }

  @Test
  @TestMetadata("NotInInitBlock.kt")
  public void testNotInInitBlock() {
    runTest("src/testData/reference/errors/NotInInitBlock.kt");
  }

  @Test
  @TestMetadata("NotInitBlock.kt")
  public void testNotInitBlock() {
    runTest("src/testData/reference/errors/NotInitBlock.kt");
  }

  @Test
  @TestMetadata("NotReferenceLiteral.kt")
  public void testNotReferenceLiteral() {
    runTest("src/testData/reference/errors/NotReferenceLiteral.kt");
  }

  @Test
  @TestMetadata("ReferencedDeclaration.kt")
  public void testReferencedDeclaration() {
    runTest("src/testData/reference/errors/ReferencedDeclaration.kt");
  }

  @Test
  @TestMetadata("ReferencedNotCall.kt")
  public void testReferencedNotCall() {
    runTest("src/testData/reference/errors/ReferencedNotCall.kt");
  }
}
