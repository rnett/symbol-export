

package compilertest.tests;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link compilertest.GenerateTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("src/testData/cases")
@TestDataPath("$PROJECT_ROOT")
public class CasesTestGenerated extends BaseCompilerTest {
  @Test
  public void testAllFilesPresentInCases() {
    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("src/testData/cases"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
  }

  @Test
  @TestMetadata("firRead.kt")
  public void testFirRead() {
    runTest("src/testData/cases/firRead.kt");
  }

  @Test
  @TestMetadata("firWrite.kt")
  public void testFirWrite() {
    runTest("src/testData/cases/firWrite.kt");
  }

  @Test
  @TestMetadata("firWriteIrRead.kt")
  public void testFirWriteIrRead() {
    runTest("src/testData/cases/firWriteIrRead.kt");
  }

  @Test
  @TestMetadata("firWriteReadEquality.kt")
  public void testFirWriteReadEquality() {
    runTest("src/testData/cases/firWriteReadEquality.kt");
  }

  @Test
  @TestMetadata("irRead.kt")
  public void testIrRead() {
    runTest("src/testData/cases/irRead.kt");
  }

  @Test
  @TestMetadata("irWrite.kt")
  public void testIrWrite() {
    runTest("src/testData/cases/irWrite.kt");
  }

  @Test
  @TestMetadata("irWriteReadEquality.kt")
  public void testIrWriteReadEquality() {
    runTest("src/testData/cases/irWriteReadEquality.kt");
  }
}
